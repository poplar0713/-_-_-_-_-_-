Index: app/src/main/res/drawable/image.xml
===================================================================
--- app/src/main/res/drawable/image.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/res/drawable/image.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle">
-    <corners android:radius="8dp"/>
-</shape>
\ No newline at end of file
Index: app/src/main/java/com/example/travolo/historysample.java
===================================================================
--- app/src/main/java/com/example/travolo/historysample.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/historysample.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
@@ -1,19 +0,0 @@
-package com.example.travolo;
-
-import java.util.ArrayList;
-
-public class historysample {
-    ArrayList<history> items = new ArrayList<>();
-
-    public ArrayList<history> getItems(){
-        history history1 = new history("1번공지","1");
-        history history2 = new history("2번공지","2");
-        history history3 = new history("3번공지","3");
-
-        items.add(history1);
-        items.add(history2);
-        items.add(history3);
-
-        return items;
-    }
-}
Index: app/src/androidTest/java/com/example/travolo/signupok.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/signupok.java	(date 1604036244781)
+++ app/src/androidTest/java/com/example/travolo/signupok.java	(date 1604036244781)
@@ -0,0 +1,137 @@
+package com.example.travolo;
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class signupok {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idxpassx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText("aaa"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText("11111111"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/areax.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/areax.java	(date 1604037947528)
+++ app/src/androidTest/java/com/example/travolo/areax.java	(date 1604037947528)
@@ -0,0 +1,110 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.DataInteraction;
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onData;
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.anything;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class areax {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void areaok() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatAutoCompleteTextView = onView(
+                allOf(withId(R.id.area),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatAutoCompleteTextView.perform(replaceText("서울"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.button2), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                3),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/checkarea.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/checkarea.java	(date 1604038292817)
+++ app/src/androidTest/java/com/example/travolo/checkarea.java	(date 1604038292817)
@@ -0,0 +1,176 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.DataInteraction;
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onData;
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.anything;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class checkarea {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void checkarea() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatAutoCompleteTextView = onView(
+                allOf(withId(R.id.area),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatAutoCompleteTextView.perform(replaceText("서"), closeSoftKeyboard());
+
+        DataInteraction appCompatTextView = onData(anything())
+                .inAdapterView(childAtPosition(
+                        withClassName(is("android.widget.PopupWindow$PopupBackgroundView")),
+                        0))
+                .atPosition(1);
+        appCompatTextView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.button2), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                3),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction appCompatTextView2 = onView(
+                allOf(withId(R.id.from),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatTextView2.perform(click());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(android.R.id.button1), withText("OK"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                3)));
+        appCompatButton3.perform(scrollTo(), click());
+
+        ViewInteraction appCompatTextView3 = onView(
+                allOf(withId(R.id.to),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatTextView3.perform(click());
+
+        ViewInteraction appCompatButton4 = onView(
+                allOf(withId(android.R.id.button1), withText("OK"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                3)));
+        appCompatButton4.perform(scrollTo(), click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.make), withText("일정 생성!"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                5),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+
+        ViewInteraction recyclerView = onView(
+                allOf(withId(R.id.recycler_plan),
+                        childAtPosition(
+                                withClassName(is("android.widget.LinearLayout")),
+                                1)));
+        recyclerView.perform(actionOnItemAtPosition(2, click()));
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/areaok.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/areaok.java	(date 1604037947496)
+++ app/src/androidTest/java/com/example/travolo/areaok.java	(date 1604037947496)
@@ -0,0 +1,119 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.DataInteraction;
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onData;
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.anything;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class areaok {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void areaok() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatAutoCompleteTextView = onView(
+                allOf(withId(R.id.area),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatAutoCompleteTextView.perform(replaceText("서"), closeSoftKeyboard());
+
+        DataInteraction appCompatTextView = onData(anything())
+                .inAdapterView(childAtPosition(
+                        withClassName(is("android.widget.PopupWindow$PopupBackgroundView")),
+                        0))
+                .atPosition(1);
+        appCompatTextView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.button2), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                3),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/preference21.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/preference21.java	(date 1604037230797)
+++ app/src/androidTest/java/com/example/travolo/preference21.java	(date 1604037230797)
@@ -0,0 +1,296 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class preference21 {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void preference20() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("270"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction recyclerView = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView2 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView2.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView3 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView3.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView4 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView4.perform(actionOnItemAtPosition(2, click()));
+
+        ViewInteraction recyclerView5 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView5.perform(actionOnItemAtPosition(3, click()));
+
+        ViewInteraction recyclerView6 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView6.perform(actionOnItemAtPosition(4, click()));
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction recyclerView7 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView7.perform(actionOnItemAtPosition(7, click()));
+
+        ViewInteraction recyclerView8 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView8.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView9 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView9.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView10 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView10.perform(actionOnItemAtPosition(2, click()));
+
+        ViewInteraction recyclerView11 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView11.perform(actionOnItemAtPosition(3, click()));
+
+        ViewInteraction recyclerView12 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView12.perform(actionOnItemAtPosition(4, click()));
+
+        ViewInteraction recyclerView13 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView13.perform(actionOnItemAtPosition(9, click()));
+
+        ViewInteraction recyclerView14 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView14.perform(actionOnItemAtPosition(11, click()));
+
+        ViewInteraction recyclerView15 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView15.perform(actionOnItemAtPosition(18, click()));
+
+        ViewInteraction recyclerView16 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView16.perform(actionOnItemAtPosition(13, click()));
+
+        ViewInteraction recyclerView17 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView17.perform(actionOnItemAtPosition(12, click()));
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton3.perform(click());
+
+        ViewInteraction recyclerView18 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView18.perform(actionOnItemAtPosition(11, click()));
+
+        ViewInteraction recyclerView19 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView19.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView20 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView20.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView21 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView21.perform(actionOnItemAtPosition(14, click()));
+
+        ViewInteraction recyclerView22 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView22.perform(actionOnItemAtPosition(12, click()));
+
+        ViewInteraction recyclerView23 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView22.perform(actionOnItemAtPosition(19, click()));
+
+        ViewInteraction recyclerView24 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView22.perform(actionOnItemAtPosition(21, click()));
+
+        ViewInteraction appCompatButton4 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton4.perform(click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/namexbirthx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/namexbirthx.java	(date 1604036189216)
+++ app/src/androidTest/java/com/example/travolo/namexbirthx.java	(date 1604036189216)
@@ -0,0 +1,135 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class namexbirthx {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idxpassx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText(""), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText(""), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/preference20.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/preference20.java	(date 1604037150701)
+++ app/src/androidTest/java/com/example/travolo/preference20.java	(date 1604037150701)
@@ -0,0 +1,291 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class preference20 {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void preference20() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("270"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction recyclerView = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView2 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView2.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView3 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView3.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView4 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView4.perform(actionOnItemAtPosition(2, click()));
+
+        ViewInteraction recyclerView5 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView5.perform(actionOnItemAtPosition(3, click()));
+
+        ViewInteraction recyclerView6 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView6.perform(actionOnItemAtPosition(4, click()));
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction recyclerView7 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView7.perform(actionOnItemAtPosition(7, click()));
+
+        ViewInteraction recyclerView8 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView8.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView9 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView9.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView10 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView10.perform(actionOnItemAtPosition(2, click()));
+
+        ViewInteraction recyclerView11 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView11.perform(actionOnItemAtPosition(3, click()));
+
+        ViewInteraction recyclerView12 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView12.perform(actionOnItemAtPosition(4, click()));
+
+        ViewInteraction recyclerView13 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView13.perform(actionOnItemAtPosition(9, click()));
+
+        ViewInteraction recyclerView14 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView14.perform(actionOnItemAtPosition(11, click()));
+
+        ViewInteraction recyclerView15 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView15.perform(actionOnItemAtPosition(18, click()));
+
+        ViewInteraction recyclerView16 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView16.perform(actionOnItemAtPosition(13, click()));
+
+        ViewInteraction recyclerView17 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView17.perform(actionOnItemAtPosition(12, click()));
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton3.perform(click());
+
+        ViewInteraction recyclerView18 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView18.perform(actionOnItemAtPosition(11, click()));
+
+        ViewInteraction recyclerView19 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView19.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView20 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView20.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView21 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView21.perform(actionOnItemAtPosition(14, click()));
+
+        ViewInteraction recyclerView22 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView22.perform(actionOnItemAtPosition(12, click()));
+
+        ViewInteraction recyclerView23 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView23.perform(actionOnItemAtPosition(15, click()));
+
+        ViewInteraction appCompatButton4 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton4.perform(click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/preference19.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/preference19.java	(date 1604037150692)
+++ app/src/androidTest/java/com/example/travolo/preference19.java	(date 1604037150692)
@@ -0,0 +1,281 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class preference19 {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void preference20() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("270"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction recyclerView = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView2 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView2.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView3 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView3.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView4 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView4.perform(actionOnItemAtPosition(2, click()));
+
+        ViewInteraction recyclerView5 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView5.perform(actionOnItemAtPosition(3, click()));
+
+        ViewInteraction recyclerView6 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView6.perform(actionOnItemAtPosition(4, click()));
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction recyclerView7 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView7.perform(actionOnItemAtPosition(7, click()));
+
+        ViewInteraction recyclerView8 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView8.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView9 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView9.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView10 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView10.perform(actionOnItemAtPosition(2, click()));
+
+        ViewInteraction recyclerView11 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView11.perform(actionOnItemAtPosition(3, click()));
+
+        ViewInteraction recyclerView12 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView12.perform(actionOnItemAtPosition(4, click()));
+
+        ViewInteraction recyclerView13 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView13.perform(actionOnItemAtPosition(9, click()));
+
+        ViewInteraction recyclerView14 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView14.perform(actionOnItemAtPosition(11, click()));
+
+        ViewInteraction recyclerView15 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView15.perform(actionOnItemAtPosition(18, click()));
+
+        ViewInteraction recyclerView16 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView16.perform(actionOnItemAtPosition(13, click()));
+
+        ViewInteraction recyclerView17 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView17.perform(actionOnItemAtPosition(12, click()));
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton3.perform(click());
+
+        ViewInteraction recyclerView18 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                3)));
+        recyclerView18.perform(actionOnItemAtPosition(11, click()));
+
+        ViewInteraction recyclerView19 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView19.perform(actionOnItemAtPosition(0, click()));
+
+        ViewInteraction recyclerView20 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView20.perform(actionOnItemAtPosition(1, click()));
+
+        ViewInteraction recyclerView21 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView21.perform(actionOnItemAtPosition(14, click()));
+
+        ViewInteraction recyclerView22 = onView(
+                allOf(withId(R.id.recycler_area),
+                        childAtPosition(
+                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                1)));
+        recyclerView22.perform(actionOnItemAtPosition(12, click()));
+
+        ViewInteraction appCompatButton4 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatButton4.perform(click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.bb), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/loginx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/loginx.java	(date 1604036593032)
+++ app/src/androidTest/java/com/example/travolo/loginx.java	(date 1604036593032)
@@ -0,0 +1,84 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class loginx {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void loginok() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("11333"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("12334"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/birthdatex.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/birthdatex.java	(date 1604036140216)
+++ app/src/androidTest/java/com/example/travolo/birthdatex.java	(date 1604036140216)
@@ -0,0 +1,135 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class birthdatex {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idxpassx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText("aaa"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText(""), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/namex.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/namex.java	(date 1604036093109)
+++ app/src/androidTest/java/com/example/travolo/namex.java	(date 1604036093109)
@@ -0,0 +1,137 @@
+package com.example.travolo;
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class namex {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idxpassx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText(""), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText("11111111"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/build.gradle	(date 1603987696605)
@@ -34,5 +34,7 @@
     implementation 'com.android.volley:volley:1.1.0'
     implementation 'com.google.code.gson:gson:2.8.2'
     implementation 'com.github.bumptech.glide:glide:4.10.0'
+    androidTestImplementation 'androidx.test:rules:1.3.0-rc01'
+    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0-alpha02'
 
 }
\ No newline at end of file
Index: app/src/main/res/layout/hitorylist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/hitorylist.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/res/layout/hitorylist.xml	(date 1604033821940)
@@ -38,7 +38,7 @@
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
                 android:gravity="center"
-                android:text="num." />
+                android:text="기간" />
 
             <TextView
                 android:id="@+id/textView7"
@@ -46,7 +46,7 @@
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
                 android:gravity="center"
-                android:text="name." />
+                android:text="여행지" />
 
             <TextView
                 android:id="@+id/textView8"
@@ -54,7 +54,7 @@
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
                 android:gravity="center"
-                android:text="confirm." />
+                android:text="일정 확인" />
         </LinearLayout>
 
         <androidx.recyclerview.widget.RecyclerView
Index: app/src/main/java/com/example/travolo/historylist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/historylist.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/historylist.java	(date 1604670287790)
@@ -20,35 +20,52 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonArrayRequest;
+import com.android.volley.toolbox.Volley;
 import com.google.android.material.navigation.NavigationView;
 
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
 public class historylist extends AppCompatActivity {
     private DrawerLayout mDrawerLayout;
     private Context context = this;
-    private historyAdapter adapter = new historyAdapter();
+    private RequestQueue queue;
+    LinearLayoutManager linearLayoutManager;
+    private historyAdapter adapter;
+    private ArrayList<history> item = new ArrayList<>();
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.hitorylist);
 
-        Intent intent = getIntent();
+        final String id = globallist.getInstance().getId();
+        setRecycle_history(id);
 
-        final String id = intent.getExtras().getString("id");
-
+        adapter = new historyAdapter(item);
         RecyclerView recyclerView = findViewById(R.id.recycler_history);
-
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
+        linearLayoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);//세로로 리스트를 띄움
+        linearLayoutManager.setSmoothScrollbarEnabled(true);
+        recyclerView.setLayoutManager(linearLayoutManager);
         recyclerView.setAdapter(adapter);
 
-        adapter.setItems(new historysample().getItems());
 
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
         actionBar.setDisplayHomeAsUpEnabled(true); // 뒤로가기 버튼 만들기
-        actionBar.setHomeAsUpIndicator(R.drawable.hamburgermenu_120234); //뒤로가기 버튼 이미지 지정
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //뒤로가기 버튼 이미지 지정
         mDrawerLayout = findViewById(R.id.drawer_layout);
 
         NavigationView navigationView = findViewById(R.id.nav_view);
@@ -101,6 +118,54 @@
             }
         });
     }
+    public void setRecycle_history(final String id){
+        String URL ="http://211.253.26.214:8080/travolo2/post/scheduleList";//통신할 URL
+
+        Response.Listener<JSONArray> listener = new Response.Listener<JSONArray>() {
+            @Override
+            public void onResponse(JSONArray response) {
+                item.clear();
+                adapter.notifyDataSetChanged();
+                try{
+                    for(int i=0;i<response.length();i++) {
+                        JSONObject jsonObject = response.getJSONObject(i);
+                        String name = jsonObject.getString("schedule_name");//여행지 이름
+                        String num = jsonObject.getString("date");//여행일정 기간
+                        String historynum = jsonObject.getString("group_no");//여행일정 번호s
+                        int count = jsonObject.getInt("count");
+                        item.add(new history(name, num, historynum, count));
+                        adapter.notifyItemInserted(0);
+                    }
+                }catch (JSONException e){
+                    e.printStackTrace();
+                }
+            }
+        };
+        Response.ErrorListener errorListener = new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+
+            }
+        };
+        Map<String, String> params = new HashMap<>();
+        params.put("user_id", id);
+        JSONObject jsonObject = new JSONObject(params);
+
+        JSONArray jsonArray = new JSONArray();
+        jsonArray.put(jsonObject);
+
+        JsonArrayRequest request = new JsonArrayRequest(Request.Method.POST,URL,jsonArray, listener, errorListener);
+        queue = Volley.newRequestQueue(this);
+        queue.add(request);
+    }
+
+    @Override
+    public void onBackPressed() {//뒤로가기 버튼을 누를시
+        super.onBackPressed();
+        Intent i = new Intent(historylist.this, login.class);//메인화면으로 이동
+        startActivity(i);
+        finish();
+    }
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
Index: app/src/main/java/com/example/travolo/progress_loading.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/progress_loading.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/progress_loading.java	(date 1604639042385)
@@ -48,6 +48,8 @@
                 try {
                     String success = response.getString("success");//응답이 success일 경우
                     if (success != null && success.equals("1")) {
+                        String group_no = response.getString("group_no");
+                        globallist.getInstance().setGroup_no(group_no);
                         Intent intent = new Intent(progress_loading.this, planlist.class);//일정 표시화면으로 이동
                         startActivity(intent);
                         finish();
Index: app/src/main/res/layout/item_history.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_history.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/res/layout/item_history.xml	(date 1604562091198)
@@ -18,24 +18,40 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_gravity="center"
+            android:layout_marginRight="10dp"
             android:text="name" />
 
 
-        <Button
-            android:id="@+id/history_grade"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="right"
-            android:background="#ffffff"
-            android:text="확인" />
-
         <TextView
             android:id="@+id/history_num"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_gravity="center|start"
+            android:layout_marginLeft="20dp"
             android:text="num" />
 
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="right"
+            android:orientation="horizontal">
+
+            <Button
+                android:id="@+id/seeplan"
+                android:layout_width="60dp"
+                android:layout_height="wrap_content"
+                android:background="@drawable/btn2"
+                android:text="일정보기" />
+
+            <Button
+                android:id="@+id/history_grade"
+                android:layout_width="60dp"
+                android:layout_height="wrap_content"
+                android:background="@drawable/btn2"
+                android:text="평가하기" />
+
+        </LinearLayout>
+
 
     </androidx.cardview.widget.CardView>
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/travolo/eventAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/eventAdapter.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/eventAdapter.java	(date 1604902335278)
@@ -1,17 +1,27 @@
 package com.example.travolo;
 
+import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.bumptech.glide.Glide;
+
 import java.util.ArrayList;
 
 public class eventAdapter extends RecyclerView.Adapter<eventAdapter.ViewHolder> {
     private ArrayList<event> items = new ArrayList<>();
+    Context context;
+
+    public eventAdapter(ArrayList<event> items, Context context) {
+        this.items = items;
+        this.context = context;
+    }
 
     @NonNull
     @Override
@@ -25,10 +35,9 @@
     @Override
     public void onBindViewHolder(@NonNull eventAdapter.ViewHolder viewHolder, int position) {
         event item = items.get(position);
-
+        Glide.with(context).load(item.getImg()).into(viewHolder.image);
         viewHolder.evname.setText(item.getName());
-        viewHolder.evcontent.setText(item.getContent());
-        viewHolder.evcontry.setText(item.getContry());
+        viewHolder.evaddress.setText(item.getContent());
     }
 
     @Override
@@ -41,13 +50,14 @@
     }
 
     class ViewHolder extends RecyclerView.ViewHolder{
-        TextView evcontry,evname,evcontent;
+        TextView evname,evaddress;
+        ImageView image;
 
         ViewHolder(View itemView){
             super(itemView);
-            evcontry = itemView.findViewById(R.id.event_contry);
             evname = itemView.findViewById(R.id.event_name);
-            evcontent = itemView.findViewById(R.id.event_content);
+            evaddress = itemView.findViewById(R.id.event_address);
+            image = itemView.findViewById(R.id.event_image);
         }
     }
 }
\ No newline at end of file
Index: app/src/androidTest/java/com/example/travolo/fromx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/fromx.java	(date 1604038357942)
+++ app/src/androidTest/java/com/example/travolo/fromx.java	(date 1604038357942)
@@ -0,0 +1,148 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.DataInteraction;
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onData;
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.anything;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class fromx {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void checkarea() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatAutoCompleteTextView = onView(
+                allOf(withId(R.id.area),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatAutoCompleteTextView.perform(replaceText("서"), closeSoftKeyboard());
+
+        DataInteraction appCompatTextView = onData(anything())
+                .inAdapterView(childAtPosition(
+                        withClassName(is("android.widget.PopupWindow$PopupBackgroundView")),
+                        0))
+                .atPosition(1);
+        appCompatTextView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.button2), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                3),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction appCompatTextView3 = onView(
+                allOf(withId(R.id.to),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatTextView3.perform(click());
+
+        ViewInteraction appCompatButton4 = onView(
+                allOf(withId(android.R.id.button1), withText("OK"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                3)));
+        appCompatButton4.perform(scrollTo(), click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.make), withText("일정 생성!"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                5),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/main/java/com/example/travolo/route.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/route.java	(date 1604550734369)
+++ app/src/main/java/com/example/travolo/route.java	(date 1604550734369)
@@ -0,0 +1,27 @@
+package com.example.travolo;
+
+public class route {
+    private double x;
+    private double y;
+
+    public route(double x, double y) {
+        this.x = x;
+        this.y = y;
+    }
+
+    public double getX() {
+        return x;
+    }
+
+    public void setX(double x) {
+        this.x = x;
+    }
+
+    public double getY() {
+        return y;
+    }
+
+    public void setY(double y) {
+        this.y = y;
+    }
+}
Index: app/src/main/res/layout/item_event.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_event.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/res/layout/item_event.xml	(date 1604902190543)
@@ -17,8 +17,7 @@
             android:id="@+id/event_image"
             android:layout_width="match_parent"
             android:layout_height="240dp"
-            android:scaleType="centerCrop"
-            app:srcCompat="@drawable/flower" />
+            android:scaleType="centerCrop" />
 
         <LinearLayout
             android:layout_width="wrap_content"
@@ -32,15 +31,6 @@
             android:paddingRight="8dp"
             android:paddingBottom="8dp">
 
-            <TextView
-                android:id="@+id/event_contry"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginBottom="8dp"
-                android:text="Movie Genre"
-                android:textColor="@android:color/white"
-                android:textSize="12dp" />
-
             <TextView
                 android:id="@+id/event_name"
                 android:layout_width="wrap_content"
@@ -52,7 +42,7 @@
 
 
             <TextView
-                android:id="@+id/event_content"
+                android:id="@+id/event_address"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="Movie Content"
Index: app/src/main/res/layout/login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/login.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/res/layout/login.xml	(date 1604903875563)
@@ -6,16 +6,18 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <RelativeLayout
+    <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent">
 
 
         <androidx.appcompat.widget.Toolbar
-            xmlns:android="http://schemas.android.com/apk/res/android"
             android:id="@+id/toolbar"
             android:layout_width="match_parent"
-            android:layout_height="wrap_content">
+            android:layout_height="wrap_content"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
 
         </androidx.appcompat.widget.Toolbar>
 
@@ -26,10 +28,12 @@
             android:layout_alignParentStart="true"
             android:layout_alignParentLeft="true"
             android:layout_alignParentTop="true"
-            android:layout_marginStart="50dp"
-            android:layout_marginLeft="50dp"
-            android:layout_marginTop="170dp"
-            android:text="여행지역 입력" />
+            android:layout_marginTop="24dp"
+            android:text="여행지역 입력"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.136"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/toolbar" />
 
         <AutoCompleteTextView
             android:id="@+id/area"
@@ -38,10 +42,11 @@
             android:layout_alignParentStart="true"
             android:layout_alignParentLeft="true"
             android:layout_alignParentTop="true"
-            android:layout_marginStart="50dp"
-            android:layout_marginLeft="50dp"
-            android:layout_marginTop="220dp"
-            android:completionThreshold="1"/>
+            android:layout_marginTop="56dp"
+            android:completionThreshold="1"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/textView" />
 
         <Button
             android:id="@+id/button2"
@@ -50,12 +55,14 @@
             android:layout_alignParentStart="true"
             android:layout_alignParentLeft="true"
             android:layout_alignParentTop="true"
-            android:layout_marginStart="166dp"
-            android:layout_marginLeft="166dp"
-            android:layout_marginTop="290dp"
+            android:layout_marginTop="72dp"
             android:background="@drawable/btn"
             android:text="확인"
-            android:textColor="@color/cardview_light_background" />
+            android:textColor="@color/cardview_light_background"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.498"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/area" />
 
         <TextView
             android:id="@+id/textView2"
@@ -64,31 +71,30 @@
             android:layout_alignParentStart="true"
             android:layout_alignParentLeft="true"
             android:layout_alignParentBottom="true"
-            android:layout_marginStart="50dp"
-            android:layout_marginLeft="50dp"
-            android:layout_marginBottom="280dp"
-            android:text="인기 여행지" />
+            android:layout_marginTop="36dp"
+            android:text="추천 여행지"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.131"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/button2" />
 
-        <ImageView
-            android:id="@+id/imageView2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/button2"
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recycler_best"
+            android:layout_width="match_parent"
+            android:layout_height="260dp"
             android:layout_alignParentStart="true"
             android:layout_alignParentLeft="true"
             android:layout_alignParentEnd="true"
             android:layout_alignParentRight="true"
             android:layout_alignParentBottom="true"
-            android:layout_marginStart="68dp"
-            android:layout_marginLeft="68dp"
-            android:layout_marginTop="157dp"
-            android:layout_marginEnd="68dp"
-            android:layout_marginRight="68dp"
-            android:layout_marginBottom="57dp"
-            app:srcCompat="@drawable/flower"
-            tools:ignore="VectorDrawableCompat" />
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/textView2"
+            app:layout_constraintVertical_bias="1.0" />
 
-    </RelativeLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
 
     <com.google.android.material.navigation.NavigationView
         android:id="@+id/nav_view"
Index: app/src/main/res/layout/planlist.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/planlist.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/res/layout/planlist.xml	(date 1604897974507)
@@ -49,7 +49,7 @@
                 android:layout_width="50dp"
                 android:layout_height="30dp"
                 android:layout_weight="1"
-                android:background="@color/cardview_shadow_start_color"
+                android:background="@color/white"
                 android:text="경로" />
 
         </LinearLayout>
Index: app/src/androidTest/java/com/example/travolo/passx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/passx.java	(date 1604035636979)
+++ app/src/androidTest/java/com/example/travolo/passx.java	(date 1604035636979)
@@ -0,0 +1,138 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class passx {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void passcheck() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText("aaa"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText("12356789"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/main/java/com/example/travolo/history.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/history.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/history.java	(date 1604670100106)
@@ -3,12 +3,40 @@
 public class history {
     private String name;
     private String num;
+    private String historynum;
+    private int date;
+
+    public history(String name, String num, String historynum, int date) {
+        this.name = name;
+        this.num = num;
+        this.historynum  = historynum;
+        this.date = date;
+    }
 
-    public history(String name, String num) {
+    public int getDate() {
+        return date;
+    }
+
+    public void setDate(int date) {
+        this.date = date;
+    }
+
+    public void setName(String name) {
         this.name = name;
+    }
+
+    public void setNum(String num) {
         this.num = num;
     }
 
+    public String getHistorynum() {
+        return historynum;
+    }
+
+    public void setHistorynum(String historynum) {
+        this.historynum = historynum;
+    }
+
     public String getName() {
         return name;
     }
Index: app/src/androidTest/java/com/example/travolo/idxpassx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/idxpassx.java	(date 1604035636965)
+++ app/src/androidTest/java/com/example/travolo/idxpassx.java	(date 1604035636965)
@@ -0,0 +1,138 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class idxpassx {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idxpassx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("aaa"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("123"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("123"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText("qaq"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText("11111111"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/main/java/com/example/travolo/event.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/event.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/event.java	(date 1604902318293)
@@ -1,18 +1,30 @@
 package com.example.travolo;
 
 public class event {
-    private String contry;
+    private String img;
     private String name;
-    private String content;
+    private String address;
 
-    public event(String contry, String name, String content) {
-        this.contry = contry;
+    public event(String name, String address, String img) {
         this.name = name;
-        this.content = content;
+        this.address = address;
+        this.img = img;
+    }
+
+    public String getImg() {
+        return img;
+    }
+
+    public void setImg(String img) {
+        this.img = img;
     }
 
-    public String getContry() {
-        return contry;
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public void setContent(String content) {
+        this.address = content;
     }
 
     public String getName() {
@@ -20,7 +32,7 @@
     }
 
     public String getContent() {
-        return content;
+        return address;
     }
 
 }
Index: app/src/main/java/com/example/travolo/period.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/period.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/period.java	(date 1604385180260)
@@ -7,7 +7,6 @@
 import android.os.Bundle;
 import android.view.MenuItem;
 import android.view.View;
-import android.view.WindowManager;
 import android.widget.Button;
 import android.widget.DatePicker;
 import android.widget.TextView;
@@ -108,7 +107,7 @@
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
         actionBar.setDisplayHomeAsUpEnabled(true); // 햄버거 버튼 만들기
-        actionBar.setHomeAsUpIndicator(R.drawable.hamburgermenu_120234); //햄버거 버튼 이미지 지정
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //햄버거 버튼 이미지 지정
         mDrawerLayout = findViewById(R.id.drawer_layout);
 
         NavigationView navigationView = findViewById(R.id.nav_view);
Index: app/src/main/res/layout/evaluateplan.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/evaluateplan.xml	(date 1604388727066)
+++ app/src/main/res/layout/evaluateplan.xml	(date 1604388727066)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout1"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    >
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+
+        <androidx.appcompat.widget.Toolbar
+            android:id="@+id/toolbar1"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
+
+        </androidx.appcompat.widget.Toolbar>
+
+        <TextView
+            android:id="@+id/textView"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:text="여행 일정"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/toolbar1" />
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recycler_evaluate"
+            android:layout_width="match_parent"
+            android:layout_height="450dp"
+            android:layout_marginTop="20dp"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/textView" />
+
+        <Button
+            android:id="@+id/evb"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/btn"
+            android:text="평가하기"
+            android:textColor="#ffffff"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/recycler_evaluate" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+    <com.google.android.material.navigation.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        android:fitsSystemWindows="true"
+        app:headerLayout="@layout/navi_header"
+        app:menu="@menu/menu" />
+
+</androidx.drawerlayout.widget.DrawerLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/travolo/signup.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/signup.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/signup.java	(date 1604294332396)
@@ -249,7 +249,7 @@
 
 
         RequestQueue queue = Volley.newRequestQueue(getApplicationContext());
-        if(idcheckflag == 1 && passcheckflag ==1){
+        if(idcheckflag == 1 && passcheckflag ==1 && passflag == 1){
             queue.add(loginRequest);//전송
         }else if (idcheckflag == 0){//아이디 중복체크를 했는지 확인
             Toast.makeText(getApplicationContext(),"아이디 중복체크를 해주세요!",Toast.LENGTH_SHORT).show();
Index: app/src/main/java/com/example/travolo/eventlist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/eventlist.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/eventlist.java	(date 1604902190512)
@@ -25,29 +25,19 @@
 public class eventlist extends AppCompatActivity {
     private DrawerLayout mDrawerLayout;
     private Context context = this;
-
-    private eventAdapter adapter = new eventAdapter();
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.eventlist);
 
-        Intent intent = getIntent();
-
-        final String id = intent.getExtras().getString("id");
-
-        RecyclerView recyclerView = findViewById(R.id.recycler_event);
-        recyclerView.setLayoutManager(new LinearLayoutManager(this));
-        recyclerView.setAdapter(adapter);
-
-        adapter.setItems(new SampleData().getItems());
+        String id = globallist.getInstance().getId();
 
         Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
         actionBar.setDisplayHomeAsUpEnabled(true); // 뒤로가기 버튼 만들기
-        actionBar.setHomeAsUpIndicator(R.drawable.hamburgermenu_120234); //뒤로가기 버튼 이미지 지정
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //뒤로가기 버튼 이미지 지정
         mDrawerLayout = findViewById(R.id.drawer_layout);
 
         NavigationView navigationView = findViewById(R.id.nav_view);
Index: app/src/main/java/com/example/travolo/setting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/setting.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/setting.java	(date 1604385180238)
@@ -75,7 +75,7 @@
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
         actionBar.setDisplayHomeAsUpEnabled(true); // 뒤로가기 버튼 만들기
-        actionBar.setHomeAsUpIndicator(R.drawable.hamburgermenu_120234); //뒤로가기 버튼 이미지 지정
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //뒤로가기 버튼 이미지 지정
         mDrawerLayout = findViewById(R.id.drawer_layout);
 
         NavigationView navigationView = findViewById(R.id.nav_view);
Index: app/src/androidTest/java/com/example/travolo/idcheckx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/idcheckx.java	(date 1604034989454)
+++ app/src/androidTest/java/com/example/travolo/idcheckx.java	(date 1604034989454)
@@ -0,0 +1,138 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class idcheckx {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idcheckx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText("aaa"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText("12345678"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/logidx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/logidx.java	(date 1604036514374)
+++ app/src/androidTest/java/com/example/travolo/logidx.java	(date 1604036514374)
@@ -0,0 +1,84 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class logidx {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void loginok() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("11333"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/main/java/com/example/travolo/evaluateplan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/evaluateplan.java	(date 1604899160598)
+++ app/src/main/java/com/example/travolo/evaluateplan.java	(date 1604899160598)
@@ -0,0 +1,259 @@
+package com.example.travolo;
+
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.ActionBar;
+import androidx.appcompat.app.AlertDialog;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.view.GravityCompat;
+import androidx.drawerlayout.widget.DrawerLayout;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.android.volley.DefaultRetryPolicy;
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonArrayRequest;
+import com.android.volley.toolbox.JsonObjectRequest;
+import com.android.volley.toolbox.Volley;
+import com.google.android.material.navigation.NavigationView;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
+public class evaluateplan extends AppCompatActivity {
+    private DrawerLayout mDrawerLayout;
+    private Context context = this;
+    private evaluateAdapter adapter;
+    private RequestQueue queue;
+    LinearLayoutManager linearLayoutManager;
+    private ArrayList<evaluate> item = new ArrayList<>();
+    Button btn;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.evaluateplan);
+
+        String num = globallist.getInstance().getGroup_no();
+        setRecycler(num);
+
+        adapter = new evaluateAdapter(item,this);
+        RecyclerView recyclerView = findViewById(R.id.recycler_evaluate);
+        linearLayoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);//세로로 리스트를 띄움
+        linearLayoutManager.setSmoothScrollbarEnabled(true);
+        recyclerView.setLayoutManager(linearLayoutManager);
+        recyclerView.setAdapter(adapter);
+
+        btn = findViewById(R.id.evb);
+        btn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                sendgrade(adapter);
+            }
+        });
+
+        String id = globallist.getInstance().getId();
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar1);
+        setSupportActionBar(toolbar);
+        ActionBar actionBar = getSupportActionBar();
+        actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
+        actionBar.setDisplayHomeAsUpEnabled(true); // 뒤로가기 버튼 만들기
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //뒤로가기 버튼 이미지 지정
+        mDrawerLayout = findViewById(R.id.drawer_layout1);
+
+        NavigationView navigationView = findViewById(R.id.nav_view);
+        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
+            @Override
+            public boolean onNavigationItemSelected(MenuItem menuItem) {
+                menuItem.setChecked(true);
+                mDrawerLayout.closeDrawers();
+
+                int id = menuItem.getItemId();
+                String title = menuItem.getTitle().toString();
+
+                if(id == R.id.plan){
+                    Toast.makeText(context, title + ": 계정 정보를 확인합니다.", Toast.LENGTH_SHORT).show();
+                }
+                else if(id == R.id.event){
+                    Toast.makeText(context, title + ": 계정 정보를 확인합니다.", Toast.LENGTH_SHORT).show();
+                }
+                else if(id == R.id.notice){
+                    Toast.makeText(context, title + ": 로그아웃 시도중", Toast.LENGTH_SHORT).show();
+                }
+                else if(id == R.id.setting){
+                    Toast.makeText(context, title + ": 로그아웃 시도중", Toast.LENGTH_SHORT).show();
+                }
+
+                return true;
+            }
+        });
+
+        View nav_haeder = navigationView.getHeaderView(0);
+        TextView id_text = nav_haeder.findViewById(R.id.nav_id);
+        id_text.setText(id);
+        Button button = nav_haeder.findViewById(R.id.button3);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                new AlertDialog.Builder(context).setTitle("로그아웃").setMessage("로그아웃 하시겠습니까?").setPositiveButton("로그아웃", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        Intent i = new Intent(evaluateplan.this, MainActivity.class);
+                        i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                        startActivity(i);
+                    }
+                }).setNegativeButton("취소", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+
+                    }
+                }).show();
+            }
+        });
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case android.R.id.home:{ // 왼쪽 상단 버튼 눌렀을 때
+                mDrawerLayout.openDrawer(GravityCompat.START);//화면에 햄버거 메뉴를 띄움
+                return true;
+            }
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    public void setRecycler(final String hisnum){
+        String uid= globallist.getInstance().getId();
+        String URL ="http://211.253.26.214:8080/travolo2/post/printSchedule";//통신할 URL
+        Response.Listener<JSONArray> listener = new Response.Listener<JSONArray>() {
+            @Override
+            public void onResponse(JSONArray response) {
+                item.clear();
+                adapter.notifyDataSetChanged();
+                try{
+                    for(int i=0;i<response.length();i++){
+                        JSONObject jsonObject = response.getJSONObject(i);
+                        String name = jsonObject.getString("name");//여행지의 이름, 사진, tid를 전달받음
+                        String img = jsonObject.getString("img");
+                        String tid = jsonObject.getString("tid");
+                        item.add(new evaluate(name,img,tid,"3"));
+                        adapter.notifyItemInserted(0);
+                    }
+                }catch (JSONException e){
+                    e.printStackTrace();
+                }
+            }
+        };
+        Response.ErrorListener errorListener = new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+
+            }
+        };
+
+        Map<String, String> params = new HashMap<>();
+        params.put("group_no", hisnum);//지역이름을 전달
+        params.put("user_id",uid);
+        JSONObject jsonObject = new JSONObject(params);
+
+        JSONArray jsonArray = new JSONArray();
+        jsonArray.put(jsonObject);
+        JsonArrayRequest request = new JsonArrayRequest(Request.Method.POST,URL,jsonArray, listener, errorListener);
+        queue = Volley.newRequestQueue(this);
+        queue.add(request);
+    }
+
+    public void sendgrade(final evaluateAdapter adapter){
+        String URL ="http://211.253.26.214:8080/travolo2/post/evaluateTour";//통신할 URL
+        ArrayList<evaluate> items = adapter.getItems();
+
+        Response.Listener<JSONArray> listener = new Response.Listener<JSONArray>() {
+            @Override
+            public void onResponse(JSONArray response) {
+                try{
+                    for(int i=0;i<response.length();i++){
+                        JSONObject jsonObject = response.getJSONObject(i);
+                        String success = jsonObject.getString("success");//여행지의 이름, 사진, tid를 전달받음
+                        if(success.equals("1")){
+                            updateMtrx();
+                        }else{
+                            Toast.makeText(context,"서버오류",Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                }catch (JSONException e){
+                    Toast.makeText(context,"네트워크 에러",Toast.LENGTH_SHORT).show();
+                }
+            }
+        };
+        Response.ErrorListener errorListener = new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+
+            }
+        };
+        JSONArray jsonArray = new JSONArray();
+        for(int i = 0; i<items.size(); i++){
+            Map<String, String> params = new HashMap<>();
+            evaluate ev = items.get(i);
+            params.put("tid",ev.getTid());
+            params.put("grade",ev.getGrade());
+            JSONObject jsonObject = new JSONObject(params);
+            jsonArray.put(jsonObject);
+        }
+        JsonArrayRequest request = new JsonArrayRequest(Request.Method.POST,URL,jsonArray, listener, errorListener);
+        queue = Volley.newRequestQueue(this);
+        queue.add(request);
+    }
+
+    public void updateMtrx(){
+        String URL = "http://211.253.26.214:15000/ratingMatrix";//통신할 서버 url
+        Response.Listener<JSONObject> responseListener = new Response.Listener<JSONObject>() {//json오브젝트로 응답받음
+            @Override
+            public void onResponse(JSONObject response) {
+                try {
+                    String success = response.getString("success");//응답이 success일 경우
+                    if (success != null && success.equals("1")) {
+                        Intent intent = new Intent(evaluateplan.this, historylist.class);//여행지 검색화면으로 이동
+                        startActivity(intent);
+                        finish();
+                    } else {
+                        Toast.makeText(getApplicationContext(), "IBCF error!", Toast.LENGTH_SHORT).show();
+                        finish();
+                    }
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            }
+        };
+
+        Response.ErrorListener errorListener = new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+                Toast.makeText(getApplicationContext(), "networkerror!", Toast.LENGTH_SHORT).show();
+                finish();
+            }
+        };
+        JsonObjectRequest loginRequest = new JsonObjectRequest(Request.Method.POST, URL, null, responseListener, errorListener);
+        loginRequest.setRetryPolicy(new DefaultRetryPolicy(3600000,1,DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));//서버와의 통신시간을 강제로 늘림
+        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());
+        queue.add(loginRequest);//전송
+    }
+}
Index: app/src/main/java/com/example/travolo/historyAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/historyAdapter.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/historyAdapter.java	(date 1604670141916)
@@ -1,8 +1,11 @@
 package com.example.travolo;
 
+import android.content.Context;
+import android.content.Intent;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Button;
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
@@ -12,6 +15,12 @@
 
 public class historyAdapter extends RecyclerView.Adapter<historyAdapter.ViewHolder> {//리스트의 내용을 담기위한 어뎁터
     private ArrayList<history> items = new ArrayList<>();//리스트
+    Context context;
+
+    public historyAdapter(ArrayList<history> items) {
+        this.items = items;
+    }
+
     @NonNull
     @Override
     public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
@@ -22,7 +31,7 @@
 
     @Override
     public void onBindViewHolder(@NonNull ViewHolder viewHolder, int position) {//입력받은 아이템의 정보를 토대로 정보 수정
-        history item = items.get(position);
+        final history item = items.get(position);
         viewHolder.name.setText(item.getName());//아이템이름 재설정
         viewHolder.num.setText(item.getNum());//아이템번호 재설정
     }
@@ -39,11 +48,37 @@
     class ViewHolder extends RecyclerView.ViewHolder {
 
         TextView num,name;
+        Button button,btn;
 
-        ViewHolder(View itemView) {//각 아이템에서 수정할 부분을 지정
+        ViewHolder(View itemView) {
             super(itemView);
             num = itemView.findViewById(R.id.history_num);
             name = itemView.findViewById(R.id.history_name);
+            button = itemView.findViewById(R.id.history_grade);
+            btn = itemView.findViewById(R.id.seeplan);
+
+            button.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    int position = getAdapterPosition();
+                    Intent intent = new Intent(v.getContext(), evaluateplan.class);
+                    String number = items.get(position).getHistorynum();
+                    globallist.getInstance().setGroup_no(number);
+                    v.getContext().startActivity(intent);
+                }
+            });
+            btn.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    int position = getAdapterPosition();
+                    Intent intent = new Intent(v.getContext(), planlist.class);
+                    String number = items.get(position).getHistorynum();
+                    int date = items.get(position).getDate();
+                    globallist.getInstance().setDate(date);
+                    globallist.getInstance().setGroup_no(number);
+                    v.getContext().startActivity(intent);
+                }
+            });
         }
     }
 }
Index: app/src/main/java/com/example/travolo/login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/login.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/login.java	(date 1604905846146)
@@ -21,6 +21,8 @@
 import androidx.appcompat.widget.Toolbar;
 import androidx.core.view.GravityCompat;
 import androidx.drawerlayout.widget.DrawerLayout;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 
 import com.android.volley.Request;
 import com.android.volley.RequestQueue;
@@ -35,7 +37,9 @@
 import org.json.JSONObject;
 
 import java.util.ArrayList;
+import java.util.HashMap;
 import java.util.List;
+import java.util.Map;
 
 
 public class login extends AppCompatActivity {
@@ -48,6 +52,9 @@
     long first;
     long second;
     private Toast toast;
+    private eventAdapter adapter;
+    LinearLayoutManager linearLayoutManager;
+    private ArrayList<event> item = new ArrayList<>();
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -80,12 +87,23 @@
             }
         });
 
+        setRecycler();
+
+        adapter = new eventAdapter(item,this);
+        RecyclerView recyclerView = findViewById(R.id.recycler_best);
+        linearLayoutManager = new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, false);//세로로 리스트를 띄움
+        linearLayoutManager.setSmoothScrollbarEnabled(true);
+        recyclerView.setLayoutManager(linearLayoutManager);
+        recyclerView.setAdapter(adapter);
+
+
+
         Toolbar toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
         actionBar.setDisplayHomeAsUpEnabled(true); // 햄버거 버튼 만들기
-        actionBar.setHomeAsUpIndicator(R.drawable.hamburgermenu_120234); //햄버거 버튼 이미지 지정
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //햄버거 버튼 이미지 지정
         mDrawerLayout = findViewById(R.id.drawer_layout);
 
         NavigationView navigationView = findViewById(R.id.nav_view);
@@ -104,7 +122,6 @@
 
                 else if(id == R.id.plan){//생성된 여행일정 페이지
                     Intent intent2 = new Intent(login.this, historylist.class);
-                    intent2.putExtra("id",id);
                     startActivity(intent2);
                 }
                 else if(id == R.id.event){
@@ -193,7 +210,6 @@
         Response.ErrorListener errorListener = new Response.ErrorListener() {
             @Override
             public void onErrorResponse(VolleyError error) {
-
             }
         };
 
@@ -208,4 +224,42 @@
         imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);
         return true;
     }
+    public void setRecycler(){
+        String uid= globallist.getInstance().getId();
+        String URL ="http://211.253.26.214:15000/recommandTourList";//통신할 URL
+        Response.Listener<JSONArray> listener = new Response.Listener<JSONArray>() {
+            @Override
+            public void onResponse(JSONArray response) {
+                item.clear();
+                adapter.notifyDataSetChanged();
+                try{
+                    for(int i=0;i<response.length();i++){
+                        JSONObject jsonObject = response.getJSONObject(i);
+                        String name = jsonObject.getString("label");//여행지의 이름, 사진, tid를 전달받음
+                        String img = jsonObject.getString("img");
+                        String ad = jsonObject.getString("address");
+                        item.add(new event(name,ad,img));
+                        adapter.notifyItemInserted(0);
+                    }
+                }catch (JSONException e){
+                    Toast.makeText(login.this," list error", Toast.LENGTH_LONG).show();
+                }
+            }
+        };
+        Response.ErrorListener errorListener = new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+                Toast.makeText(login.this,"newt error", Toast.LENGTH_LONG).show();
+            }
+        };
+
+        Map<String, String> params = new HashMap<>();
+        params.put("user_id",uid);
+
+        JSONArray jsonArray = new JSONArray();
+        jsonArray.put(params);
+        JsonArrayRequest request = new JsonArrayRequest(Request.Method.POST,URL,jsonArray, listener, errorListener);
+        queue = Volley.newRequestQueue(this);
+        queue.add(request);
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/travolo/planlist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/planlist.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/planlist.java	(date 1604665172787)
@@ -53,6 +53,11 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.planlist);
+
+        final String id = globallist.getInstance().getId();
+
+        setRecycle_plan(id);
+
         DisplayMetrics dm = getResources().getDisplayMetrics();//dp치수를 설정하기위한 메소드
         int size = Math.round(10 * dm.density);//size를 10dp로 설정
         layout = findViewById(R.id.btnline);//버튼을 생성할 레이아웃
@@ -83,9 +88,7 @@
             layout.addView(btn);//레이아웃에 버튼 추가
         }
 
-        final String id = globallist.getInstance().getId();
 
-        setRecycle_plan(id);
         recyclerView = findViewById(R.id.recycler_plan);
         adapter = new planAdapter(this, item);
         linearLayoutManager = new LinearLayoutManager(this, LinearLayoutManager.VERTICAL, false);//세로로 리스트를 띄움
@@ -119,7 +122,7 @@
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
         actionBar.setDisplayHomeAsUpEnabled(true); // 햄버거 버튼 만들기
-        actionBar.setHomeAsUpIndicator(R.drawable.hamburgermenu_120234); //햄버거 버튼 이미지 지정
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //햄버거 버튼 이미지 지정
         mDrawerLayout = findViewById(R.id.drawer_layout);
 
         NavigationView navigationView = findViewById(R.id.nav_view);
@@ -186,7 +189,7 @@
         return super.onOptionsItemSelected(item);
     }
     public void setRecycle_plan(final String id){
-        String URL ="http://211.253.26.214:8080/travolo2/post/schedule";//통신할 URL
+        String URL ="http://211.253.26.214:8080/travolo2/post/makeSchedule";//통신할 URL
         Response.Listener<JSONArray> listener = new Response.Listener<JSONArray>() {
             @Override
             public void onResponse(JSONArray response) {
@@ -202,7 +205,6 @@
                         item.add(new plan(tid,name,img,info));
                         adapter.notifyItemInserted(0);
                     }
-
                 }catch (JSONException e){
                     e.printStackTrace();
                 }
@@ -216,6 +218,7 @@
         };
         Map<String, String> params = new HashMap<>();
         params.put("user_id", id);
+        params.put("group_no", globallist.getInstance().getGroup_no());
         JSONObject jsonObject = new JSONObject(params);
 
         JSONArray jsonArray = new JSONArray();
Index: app/src/androidTest/java/com/example/travolo/dateok.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/dateok.java	(date 1604038292803)
+++ app/src/androidTest/java/com/example/travolo/dateok.java	(date 1604038292803)
@@ -0,0 +1,166 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.DataInteraction;
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onData;
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.anything;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class dateok {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void checkarea() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatAutoCompleteTextView = onView(
+                allOf(withId(R.id.area),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatAutoCompleteTextView.perform(replaceText("서"), closeSoftKeyboard());
+
+        DataInteraction appCompatTextView = onData(anything())
+                .inAdapterView(childAtPosition(
+                        withClassName(is("android.widget.PopupWindow$PopupBackgroundView")),
+                        0))
+                .atPosition(1);
+        appCompatTextView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.button2), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                3),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction appCompatTextView2 = onView(
+                allOf(withId(R.id.from),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatTextView2.perform(click());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(android.R.id.button1), withText("OK"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                3)));
+        appCompatButton3.perform(scrollTo(), click());
+
+        ViewInteraction appCompatTextView3 = onView(
+                allOf(withId(R.id.to),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatTextView3.perform(click());
+
+        ViewInteraction appCompatButton4 = onView(
+                allOf(withId(android.R.id.button1), withText("OK"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                3)));
+        appCompatButton4.perform(scrollTo(), click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.make), withText("일정 생성!"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                5),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/AndroidManifest.xml	(date 1604045195540)
@@ -42,6 +42,7 @@
         <activity android:name=".findaccount"/>
         <activity android:name=".areainfo"/>
         <activity android:name=".findresult"/>
+        <activity android:name=".evaluateplan"/>
         <activity android:name=".sample"/>
         <uses-library android:name="org.apache.http.legacy" android:required="false"/>
     </application>
Index: app/src/main/java/com/example/travolo/evaluate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/evaluate.java	(date 1604389126521)
+++ app/src/main/java/com/example/travolo/evaluate.java	(date 1604389126521)
@@ -0,0 +1,47 @@
+package com.example.travolo;
+
+public class evaluate {
+    private String name;
+    private String image;
+    private String tid;
+    private String grade;
+
+    public evaluate(String name, String image, String tid, String grade) {
+        this.name = name;
+        this.image = image;
+        this.tid = tid;
+        this.grade = grade;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public String getImage() {
+        return image;
+    }
+
+    public void setImage(String image) {
+        this.image = image;
+    }
+
+    public String getTid() {
+        return tid;
+    }
+
+    public void setTid(String tid) {
+        this.tid = tid;
+    }
+
+    public String getGrade() {
+        return grade;
+    }
+
+    public void setGrade(String grade) {
+        this.grade = grade;
+    }
+}
Index: app/src/main/java/com/example/travolo/evaluateAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/evaluateAdapter.java	(date 1604470127538)
+++ app/src/main/java/com/example/travolo/evaluateAdapter.java	(date 1604470127538)
@@ -0,0 +1,132 @@
+package com.example.travolo;
+
+import android.content.Context;
+import android.graphics.Color;
+import android.util.SparseBooleanArray;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.bumptech.glide.Glide;
+
+import java.util.ArrayList;
+
+public class evaluateAdapter extends RecyclerView.Adapter<evaluateAdapter.ViewHolder> {
+    private ArrayList<evaluate> items = new ArrayList<>();
+    private SparseBooleanArray goodselected = new SparseBooleanArray(0);
+    private SparseBooleanArray bads = new SparseBooleanArray(0);
+    Context context;
+
+    public evaluateAdapter(ArrayList<evaluate> items, Context context) {
+        this.items = items;
+        this.context = context;
+    }
+
+    @NonNull
+    @Override
+    public evaluateAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_evaluate,parent,false);
+        evaluateAdapter.ViewHolder viewHolder = new evaluateAdapter.ViewHolder(itemView);
+        return viewHolder;
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull final evaluateAdapter.ViewHolder holder, int position) {
+        evaluate item = items.get(position);
+        holder.evname.setText(item.getName());
+        Glide.with(context).load(item.getImage()).into(holder.evimg);
+        int pos = holder.getAdapterPosition();
+        if(isItemgoodSelected(position) && !isbads(position)){
+            item.setGrade("5");
+            items.set(pos,item);
+            holder.good.setBackgroundResource(R.drawable.icon_like_color);
+            holder.bad.setBackgroundResource(R.drawable.icon_unlike_gray);
+        }
+        else if(isbads(position) && !isItemgoodSelected(position)){
+            item.setGrade("0");
+            items.set(pos,item);
+            holder.bad.setBackgroundResource(R.drawable.icon_unlike_color);
+            holder.good.setBackgroundResource(R.drawable.icon_like_gray);
+        }else{
+            item.setGrade("3");
+            items.set(pos,item);
+            holder.bad.setBackgroundResource(R.drawable.icon_unlike_gray);
+            holder.good.setBackgroundResource(R.drawable.icon_like_gray);
+        }
+    }
+
+    @Override
+    public int getItemCount() {
+       return items.size();
+    }
+
+    public void setItems(ArrayList<evaluate> items){
+        this.items = items;
+    }
+
+    public ArrayList<evaluate> getItems() {
+        return items;
+    }
+
+    class ViewHolder extends RecyclerView.ViewHolder{
+        ImageView evimg;
+        TextView evname;
+        Button good, bad;
+
+        ViewHolder(View itemView){
+            super(itemView);
+            evimg = itemView.findViewById(R.id.evimage);
+            evname = itemView.findViewById(R.id.evname);
+            good = itemView.findViewById(R.id.selectgood);
+            bad = itemView.findViewById(R.id.selectbad);
+
+            good.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    int position = getAdapterPosition();
+                    toggleItemgoodSelected(position);
+                }
+            });
+            bad.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    int position = getAdapterPosition();
+                    togglebad(position);
+                }
+            });
+        }
+    }
+    private void toggleItemgoodSelected(int position){//리사이클러뷰의 재사용을 방지하기위한 선택한 리스트 확인
+        if(goodselected.get(position,false)){
+            goodselected.delete(position);//선택리스트에서 삭제
+            notifyItemChanged(position);//리스트 갱신
+        }else{
+            goodselected.put(position,true);//선택리스트에 추가
+            bads.delete(position);
+            notifyItemChanged(position);//리스트 갱신
+        }
+    }
+    private Boolean isItemgoodSelected(int position){
+        return goodselected.get(position, false);
+    }
+    private void togglebad(int position){//리사이클러뷰의 재사용을 방지하기위한 선택한 리스트 확인
+        if(bads.get(position,false)){
+            bads.delete(position);//선택리스트에서 삭제
+            notifyItemChanged(position);//리스트 갱신
+        }else{
+            bads.put(position,true);//선택리스트에 추가
+            goodselected.delete(position);
+            notifyItemChanged(position);//리스트 갱신
+        }
+    }
+    private Boolean isbads(int position){
+        return bads.get(position, false);
+    }
+}
Index: app/src/main/res/layout/item_evaluate.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_evaluate.xml	(date 1604385061939)
+++ app/src/main/res/layout/item_evaluate.xml	(date 1604385061939)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginLeft="10dp"
+    android:layout_marginRight="10dp"
+    android:layout_marginBottom="3dp">
+
+
+        <androidx.cardview.widget.CardView
+            android:id="@+id/preference_parent"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:cardCornerRadius="4dp"
+            app:cardElevation="4dp"
+            app:cardUseCompatPadding="true">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+
+                <ImageView
+                    android:id="@+id/evimage"
+                    android:layout_width="100dp"
+                    android:layout_height="100dp"
+                    android:scaleType="centerCrop" />
+
+
+                <TextView
+                    android:id="@+id/evname"
+                    android:layout_width="250dp"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginRight="10dp"
+                    android:layout_weight="6"
+                    android:gravity="center"
+                    android:text="TextView" />
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="end"
+                    android:layout_weight="1"
+                    android:orientation="vertical">
+
+                    <Button
+                        android:id="@+id/selectgood"
+                        android:layout_width="100dp"
+                        android:layout_height="50dp"
+                        android:background="@drawable/icon_like_gray" />
+
+                    <Button
+                        android:id="@+id/selectbad"
+                        android:layout_width="100dp"
+                        android:layout_height="50dp"
+                        android:background="@drawable/icon_unlike_gray" />
+                </LinearLayout>
+
+            </LinearLayout>
+        </androidx.cardview.widget.CardView>
+</FrameLayout>
\ No newline at end of file
Index: app/src/androidTest/java/com/example/travolo/deleteidcancle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/deleteidcancle.java	(date 1604038677671)
+++ app/src/androidTest/java/com/example/travolo/deleteidcancle.java	(date 1604038677671)
@@ -0,0 +1,131 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class deleteidcancle {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void deleteidcancle() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("ds128@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1q2w3e4r1"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatImageButton = onView(
+                allOf(withContentDescription("Navigate up"),
+                        childAtPosition(
+                                allOf(withId(R.id.toolbar),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.RelativeLayout")),
+                                                0)),
+                                0),
+                        isDisplayed()));
+        appCompatImageButton.perform(click());
+
+        ViewInteraction navigationMenuItemView = onView(
+                allOf(childAtPosition(
+                        allOf(withId(R.id.design_navigation_view),
+                                childAtPosition(
+                                        withId(R.id.nav_view),
+                                        0)),
+                        5),
+                        isDisplayed()));
+        navigationMenuItemView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.deleteid), withText("회원 탈퇴"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                        1),
+                                5),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(android.R.id.button2), withText("취소"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.buttonPanel),
+                                        0),
+                                2)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/passxpasscheckx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/passxpasscheckx.java	(date 1604035927051)
+++ app/src/androidTest/java/com/example/travolo/passxpasscheckx.java	(date 1604035927051)
@@ -0,0 +1,138 @@
+package com.example.travolo;
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class passxpasscheckx {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idxpassx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("12345"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("123"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText("qaq"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText("11111111"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/deleteid.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/deleteid.java	(date 1604038749764)
+++ app/src/androidTest/java/com/example/travolo/deleteid.java	(date 1604038749764)
@@ -0,0 +1,129 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class deleteid {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void deleteidcancle() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("ds128@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1q2w3e4r1"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatImageButton = onView(
+                allOf(withContentDescription("Navigate up"),
+                        childAtPosition(
+                                allOf(withId(R.id.toolbar),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.RelativeLayout")),
+                                                0)),
+                                0),
+                        isDisplayed()));
+        appCompatImageButton.perform(click());
+
+        ViewInteraction navigationMenuItemView = onView(
+                allOf(childAtPosition(
+                        allOf(withId(R.id.design_navigation_view),
+                                childAtPosition(
+                                        withId(R.id.nav_view),
+                                        0)),
+                        5),
+                        isDisplayed()));
+        navigationMenuItemView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.deleteid), withText("회원 탈퇴"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                        1),
+                                5),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(android.R.id.button2), withText("회원탈퇴"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.buttonPanel),
+                                        1),
+                                2)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/main/res/layout/plan_map.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/plan_map.xml	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/res/layout/plan_map.xml	(date 1604897974523)
@@ -7,27 +7,34 @@
     android:layout_height="match_parent"
     >
 
-    <LinearLayout
+    <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent"
         android:orientation="vertical"
         tools:context="com.skt.tmapsample.tmapview.MapDraw">
 
 
-        <androidx.appcompat.widget.Toolbar xmlns:android="http://schemas.android.com/apk/res/android"
+        <androidx.appcompat.widget.Toolbar
             android:id="@+id/toolbar"
             android:layout_width="match_parent"
-            android:layout_height="wrap_content">
+            android:layout_height="wrap_content"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
 
         </androidx.appcompat.widget.Toolbar>
 
         <LinearLayout
+            android:id="@+id/linearLayout6"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
+            android:orientation="horizontal"
             android:layout_marginLeft="20dp"
             android:layout_marginRight="20dp"
             android:layout_marginBottom="20dp"
-            android:orientation="horizontal">
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/toolbar">
 
             <TextView
                 android:id="@+id/textView"
@@ -38,10 +45,11 @@
                 android:text="여행 일정" />
 
             <Button
+                android:id="@+id/planlistbtn"
                 android:layout_width="50dp"
                 android:layout_height="30dp"
                 android:layout_weight="1"
-                android:background="@color/cardview_shadow_start_color"
+                android:background="@color/white"
                 android:text="일정"
                 android:textColor="@color/design_default_color_on_secondary" />
 
@@ -54,24 +62,28 @@
                 android:textColor="#ffffff" />
 
         </LinearLayout>
+
         <LinearLayout
-            android:id="@+id/Tmapview"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:orientation="vertical">
-            <ScrollView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content">
-                <LinearLayout
-                    android:id="@+id/datebtn"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:orientation="horizontal"/>
-            </ScrollView>
+            android:id="@+id/datebtn"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/linearLayout6">
 
         </LinearLayout>
 
-    </LinearLayout>
+        <LinearLayout
+            android:id="@+id/Tmapview"
+            android:layout_width="match_parent"
+            android:layout_height="600dp"
+            android:orientation="vertical"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/datebtn" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
     <com.google.android.material.navigation.NavigationView
         android:id="@+id/nav_view"
         android:layout_width="wrap_content"
Index: app/src/main/java/com/example/travolo/plan_map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/plan_map.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/plan_map.java	(date 1604643257338)
@@ -1,24 +1,253 @@
 package com.example.travolo;
 
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Color;
+import android.graphics.drawable.BitmapDrawable;
 import android.os.Bundle;
+import android.util.DisplayMetrics;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.Button;
 import android.widget.LinearLayout;
+import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.Nullable;
+import androidx.appcompat.app.ActionBar;
+import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.core.content.ContextCompat;
+import androidx.core.view.GravityCompat;
+import androidx.drawerlayout.widget.DrawerLayout;
 
+import com.android.volley.Request;
+import com.android.volley.RequestQueue;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonArrayRequest;
+import com.android.volley.toolbox.Volley;
+import com.google.android.material.navigation.NavigationView;
+import com.skt.Tmap.TMapData;
+import com.skt.Tmap.TMapInfo;
+import com.skt.Tmap.TMapMarkerItem;
+import com.skt.Tmap.TMapPoint;
+import com.skt.Tmap.TMapPolyLine;
 import com.skt.Tmap.TMapView;
 
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.xml.sax.SAXException;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
+import javax.xml.parsers.ParserConfigurationException;
+
 public class plan_map extends AppCompatActivity {
-    LinearLayout linearLayout;
+    private RequestQueue queue;
+    private DrawerLayout mDrawerLayout;
+    private Context context = this;
+    LinearLayout linearLayout,liner;
+    ArrayList<route> item;
+
+    Button bt;
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.plan_map);
 
+
+        String group_no = globallist.getInstance().getGroup_no();
+        String id = globallist.getInstance().getId();
+
         linearLayout = findViewById(R.id.Tmapview);
-        TMapView tMapView = new TMapView(this);
+        final TMapView tMapView = new TMapView(this);
 
         tMapView.setSKTMapApiKey("l7xxa3a9929fe00448dba86b5fd5e81648eb");
         linearLayout.addView(tMapView);
+
+        setRoute(id, group_no);
+        liner = findViewById(R.id.datebtn);
+        DisplayMetrics dm = getResources().getDisplayMetrics();//dp치수를 설정하기위한 메소드
+        int size = Math.round(10 * dm.density);
+        for(int i = 0; i<globallist.getInstance().getDate(); i++) {
+            Button btn = new Button(this);//새로운 버튼을 생성
+            btn.setText(i + 1 + "일");//날짜 표시
+            final int position = i * 4;
+            btn.setBackground(getApplicationContext().getResources().getDrawable(R.drawable.btn));//버튼 이미지 설정
+            btn.setTextColor(Color.WHITE);
+            LinearLayout.LayoutParams param = new LinearLayout.LayoutParams(size * 4, size * 4);//버튼 사이즈 조절
+            param.bottomMargin = size;//버튼 마진 설정
+            param.leftMargin = size;//버튼 마진 설정
+            param.rightMargin = size;//버튼 마진 설정
+            btn.setLayoutParams(param);
+            final int j = i*4;
+            btn.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    TMapPoint tMapPointStart = new TMapPoint(item.get(j).getX(),item.get(j).getY()); // SKT타워(출발지)
+                    TMapPoint tMapPointEnd = new TMapPoint(item.get(j+3).getX(),item.get(j+3).getY());
+                    ArrayList<TMapPoint> pathlist = new ArrayList<>();
+                    ArrayList<TMapPoint> point = new ArrayList<>();
+                    pathlist.add(new TMapPoint(item.get(j+1).getX(),item.get(j+1).getY()));
+                    pathlist.add(new TMapPoint(item.get(j+2).getX(),item.get(j+2).getY()));// N서울타워(목적지)
+                    try {
+                        searchRoute(tMapPointStart,tMapPointEnd,tMapView, pathlist);
+                    } catch (ParserConfigurationException e) {
+                        e.printStackTrace();
+                    } catch (SAXException e) {
+                        e.printStackTrace();
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
+                    point.add(new TMapPoint(item.get(j).getX(),item.get(j).getY()));
+                    point.add(new TMapPoint(item.get(j+1).getX(),item.get(j+1).getY()));
+                    point.add(new TMapPoint(item.get(j+2).getX(),item.get(j+2).getY()));
+                    point.add(new TMapPoint(item.get(j+3).getX(),item.get(j+3).getY()));
+
+                    TMapInfo info = tMapView.getDisplayTMapInfo(point);
+                    TMapPoint tMapPoint = info.getTMapPoint();
+                    tMapView.setCenterPoint(tMapPoint.getLongitude(),tMapPoint.getLatitude());
+                    tMapView.setZoomLevel(info.getTMapZoomLevel());
+                }
+            });
+            liner.addView(btn);//레이아웃에 버튼 추가
+        }
+        bt = findViewById(R.id.planlistbtn);
+        bt.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                finish();
+            }
+        });
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        ActionBar actionBar = getSupportActionBar();
+        actionBar.setDisplayShowTitleEnabled(false); // 기존 title 지우기
+        actionBar.setDisplayHomeAsUpEnabled(true); // 햄버거 버튼 만들기
+        actionBar.setHomeAsUpIndicator(R.drawable.hambergermenu); //햄버거 버튼 이미지 지정
+        mDrawerLayout = findViewById(R.id.drawer_layout);
+
+        NavigationView navigationView = findViewById(R.id.nav_view);
+        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
+            @Override
+            public boolean onNavigationItemSelected(MenuItem menuItem) {
+                menuItem.setChecked(true);
+                mDrawerLayout.closeDrawers();
+
+                int id = menuItem.getItemId();
+                String title = menuItem.getTitle().toString();
+
+                if(id == R.id.plan){
+                    Toast.makeText(context, title + ": 계정 정보를 확인합니다.", Toast.LENGTH_SHORT).show();
+                }
+                else if(id == R.id.event){
+                    Toast.makeText(context, title + ": 설정 정보를 확인합니다.", Toast.LENGTH_SHORT).show();
+                }
+                else if(id == R.id.notice){
+                    Toast.makeText(context, title + ": 로그아웃 시도중", Toast.LENGTH_SHORT).show();
+                }
+                else if(id == R.id.setting){
+                    Toast.makeText(context, title + ": 로그아웃 시도중", Toast.LENGTH_SHORT).show();
+                }
+
+                return true;
+            }
+        });
+        View nav_haeder = navigationView.getHeaderView(0);
+        TextView id_text = nav_haeder.findViewById(R.id.nav_id);
+        id_text.setText(id);
+        Button button = nav_haeder.findViewById(R.id.button3);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {//로그아웃 버튼 선택시
+                new AlertDialog.Builder(context).setTitle("로그아웃").setMessage("로그아웃 하시겠습니까?").setPositiveButton("로그아웃", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        Intent i = new Intent(plan_map.this, MainActivity.class);
+                        globallist.getInstance().logout();
+                        i.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP|Intent.FLAG_ACTIVITY_SINGLE_TOP);
+                        startActivity(i);
+                    }
+                }).setNegativeButton("취소", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+
+                    }
+                }).show();
+            }
+        });
+
+
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()){
+            case android.R.id.home:{ // 왼쪽 상단 버튼 눌렀을 때
+                mDrawerLayout.openDrawer(GravityCompat.START);//화면에 햄버거 메뉴를 띄움
+                return true;
+            }
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    public void setRoute(final String id, final String group){
+        String URL ="http://211.253.26.214:8080/travolo2/post/optimalRoad";//통신할 URL
+        Response.Listener<JSONArray> listener = new Response.Listener<JSONArray>() {
+            @Override
+            public void onResponse(JSONArray response) {
+                item = new ArrayList<>();
+                try{
+                    for(int i=0;i<response.length();i++){
+                        JSONObject jsonObject = response.getJSONObject(i);
+                        String x = jsonObject.getString("gps_lat");//여행지 이름
+                        String y = jsonObject.getString("gps_long");//여행지 사진
+                        item.add(new route(Double.parseDouble(x),Double.parseDouble(y)));
+                    }
+                }catch (JSONException e){
+                    Toast.makeText(context,"서버오류",Toast.LENGTH_SHORT).show();
+                }
+            }
+        };
+        Response.ErrorListener errorListener = new Response.ErrorListener() {
+            @Override
+            public void onErrorResponse(VolleyError error) {
+                Toast.makeText(context,"서버오류",Toast.LENGTH_SHORT).show();
+            }
+        };
+        Map<String, String> params = new HashMap<>();
+        params.put("user_id", id);
+        params.put("group_no", group);
+        JSONObject jsonObject = new JSONObject(params);
+
+        JSONArray jsonArray = new JSONArray();
+        jsonArray.put(jsonObject);
+
+        JsonArrayRequest request = new JsonArrayRequest(Request.Method.POST,URL,jsonArray, listener, errorListener);
+        queue = Volley.newRequestQueue(this);
+        queue.add(request);
+    }
+    public void searchRoute(TMapPoint start, TMapPoint end, final TMapView mapView, ArrayList<TMapPoint> passlist) throws ParserConfigurationException, SAXException, IOException {
+        TMapData data = new TMapData();
+        data.findPathDataWithType(TMapData.TMapPathType.CAR_PATH, start, end, passlist, 0, new TMapData.FindPathDataListenerCallback() {
+            @Override
+            public void onFindPathData(TMapPolyLine tMapPolyLine) {
+                tMapPolyLine.setLineColor(R.color.colorAccent);
+                tMapPolyLine.setLineWidth(10);
+                mapView.addTMapPath(tMapPolyLine);
+            }
+        });
+        Bitmap st = BitmapFactory.decodeResource(context.getResources(),R.drawable.mark);
+        mapView.setTMapPathIcon(st,st,st);
     }
 }
Index: app/src/androidTest/java/com/example/travolo/passcheckx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/passcheckx.java	(date 1604035927065)
+++ app/src/androidTest/java/com/example/travolo/passcheckx.java	(date 1604035927065)
@@ -0,0 +1,138 @@
+package com.example.travolo;
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class passcheckx {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void idxpassx() {
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.signup), withText("Sign Up"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout),
+                                        childAtPosition(
+                                                withClassName(is("androidx.constraintlayout.widget.ConstraintLayout")),
+                                                5)),
+                                1),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.id),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                0)));
+        appCompatEditText.perform(scrollTo(), replaceText("des03046@naver.com"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.check), withText("중복 확인"),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout3),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                0)),
+                                1)));
+        appCompatButton2.perform(scrollTo(), click());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                2)));
+        appCompatEditText2.perform(scrollTo(), replaceText("12345qwe"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText3 = onView(
+                allOf(withId(R.id.passwordcheck),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout4),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                4)),
+                                0)));
+        appCompatEditText3.perform(scrollTo(), replaceText("123"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText4 = onView(
+                allOf(withId(R.id.name),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                5)));
+        appCompatEditText4.perform(scrollTo(), replaceText("qaq"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText5 = onView(
+                allOf(withId(R.id.birthdate),
+                        childAtPosition(
+                                allOf(withId(R.id.linearLayout2),
+                                        childAtPosition(
+                                                withClassName(is("android.widget.LinearLayout")),
+                                                6)),
+                                0)));
+        appCompatEditText5.perform(scrollTo(), replaceText("11111111"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(R.id.signup), withText("다음"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                7)));
+        appCompatButton3.perform(scrollTo(), click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/datex.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/datex.java	(date 1604038430172)
+++ app/src/androidTest/java/com/example/travolo/datex.java	(date 1604038430172)
@@ -0,0 +1,128 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.DataInteraction;
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onData;
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.anything;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class datex {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void checkarea() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatAutoCompleteTextView = onView(
+                allOf(withId(R.id.area),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatAutoCompleteTextView.perform(replaceText("서"), closeSoftKeyboard());
+
+        DataInteraction appCompatTextView = onData(anything())
+                .inAdapterView(childAtPosition(
+                        withClassName(is("android.widget.PopupWindow$PopupBackgroundView")),
+                        0))
+                .atPosition(1);
+        appCompatTextView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.button2), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                3),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.make), withText("일정 생성!"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                5),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/tox.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/tox.java	(date 1604038390021)
+++ app/src/androidTest/java/com/example/travolo/tox.java	(date 1604038390021)
@@ -0,0 +1,147 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.DataInteraction;
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onData;
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.action.ViewActions.scrollTo;
+import static androidx.test.espresso.contrib.RecyclerViewActions.actionOnItemAtPosition;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withClassName;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+import static org.hamcrest.Matchers.anything;
+import static org.hamcrest.Matchers.is;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class tox {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void checkarea() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+
+        ViewInteraction appCompatAutoCompleteTextView = onView(
+                allOf(withId(R.id.area),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatAutoCompleteTextView.perform(replaceText("서"), closeSoftKeyboard());
+
+        DataInteraction appCompatTextView = onData(anything())
+                .inAdapterView(childAtPosition(
+                        withClassName(is("android.widget.PopupWindow$PopupBackgroundView")),
+                        0))
+                .atPosition(1);
+        appCompatTextView.perform(click());
+
+        ViewInteraction appCompatButton2 = onView(
+                allOf(withId(R.id.button2), withText("확인"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                3),
+                        isDisplayed()));
+        appCompatButton2.perform(click());
+
+        ViewInteraction appCompatTextView2 = onView(
+                allOf(withId(R.id.from),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatTextView2.perform(click());
+
+        ViewInteraction appCompatButton3 = onView(
+                allOf(withId(android.R.id.button1), withText("OK"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withClassName(is("android.widget.ScrollView")),
+                                        0),
+                                3)));
+        appCompatButton3.perform(scrollTo(), click());
+
+        ViewInteraction appCompatButton5 = onView(
+                allOf(withId(R.id.make), withText("일정 생성!"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(R.id.drawer_layout),
+                                        0),
+                                5),
+                        isDisplayed()));
+        appCompatButton5.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/androidTest/java/com/example/travolo/logpassx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/logpassx.java	(date 1604036428832)
+++ app/src/androidTest/java/com/example/travolo/logpassx.java	(date 1604036428832)
@@ -0,0 +1,85 @@
+package com.example.travolo;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+
+public class logpassx {
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void loginok() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("12345"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
Index: app/src/main/java/com/example/travolo/globallist.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/travolo/globallist.java	(revision fbd6b9633ed6334e3fed34b6b783253064a586a5)
+++ app/src/main/java/com/example/travolo/globallist.java	(date 1604550426797)
@@ -5,8 +5,19 @@
 
 public class globallist {
     private ArrayList<preference> list;//선택한 여행지를 저장하기 위한 리스트
+    private ArrayList<route> map;
     private String id;//로그인을 위한 아이디 저장
     private int date;
+    private String group_no;
+
+    public String getGroup_no() {
+        return group_no;
+    }
+
+    public void setGroup_no(String group_no) {
+        this.group_no = group_no;
+    }
+
     public ArrayList<preference> getList() {
         return list;
     }
@@ -31,6 +42,7 @@
         this.list = list;
     }
 
+
     public void addList(ArrayList<preference> list){
         for(int i =0; i< list.size(); i++){
             this.list.add(list.get(i));
Index: app/src/androidTest/java/com/example/travolo/loginok.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/example/travolo/loginok.java	(date 1604036428842)
+++ app/src/androidTest/java/com/example/travolo/loginok.java	(date 1604036428842)
@@ -0,0 +1,87 @@
+package com.example.travolo;
+
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewParent;
+
+import androidx.test.espresso.ViewInteraction;
+import androidx.test.filters.LargeTest;
+import androidx.test.rule.ActivityTestRule;
+import androidx.test.runner.AndroidJUnit4;
+
+import org.hamcrest.Description;
+import org.hamcrest.Matcher;
+import org.hamcrest.TypeSafeMatcher;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static androidx.test.espresso.Espresso.onView;
+import static androidx.test.espresso.action.ViewActions.click;
+import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;
+import static androidx.test.espresso.action.ViewActions.replaceText;
+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
+import static androidx.test.espresso.matcher.ViewMatchers.withId;
+import static androidx.test.espresso.matcher.ViewMatchers.withText;
+import static org.hamcrest.Matchers.allOf;
+
+@LargeTest
+@RunWith(AndroidJUnit4.class)
+public class loginok {
+
+    @Rule
+    public ActivityTestRule<SplashActivity> mActivityTestRule = new ActivityTestRule<>(SplashActivity.class);
+
+    @Test
+    public void loginok() {
+        ViewInteraction appCompatEditText = onView(
+                allOf(withId(R.id.email),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                1),
+                        isDisplayed()));
+        appCompatEditText.perform(replaceText("1133"), closeSoftKeyboard());
+
+        ViewInteraction appCompatEditText2 = onView(
+                allOf(withId(R.id.password),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                2),
+                        isDisplayed()));
+        appCompatEditText2.perform(replaceText("1234"), closeSoftKeyboard());
+
+        ViewInteraction appCompatButton = onView(
+                allOf(withId(R.id.button), withText("Login"),
+                        childAtPosition(
+                                childAtPosition(
+                                        withId(android.R.id.content),
+                                        0),
+                                4),
+                        isDisplayed()));
+        appCompatButton.perform(click());
+    }
+
+    private static Matcher<View> childAtPosition(
+            final Matcher<View> parentMatcher, final int position) {
+
+        return new TypeSafeMatcher<View>() {
+            @Override
+            public void describeTo(Description description) {
+                description.appendText("Child at position " + position + " in parent ");
+                parentMatcher.describeTo(description);
+            }
+
+            @Override
+            public boolean matchesSafely(View view) {
+                ViewParent parent = view.getParent();
+                return parent instanceof ViewGroup && parentMatcher.matches(parent)
+                        && view.equals(((ViewGroup) parent).getChildAt(position));
+            }
+        };
+    }
+}
diff --git app/src/main/res/drawable/dot.gif app/src/main/res/drawable/dot.gif
deleted file mode 100644
index 0ea453b1b6901d48deececb37eb796493ca1be44..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git app/src/main/res/drawable/flower.png app/src/main/res/drawable/flower.png
deleted file mode 100644
index eb2438129ac9b64605fb2f3679e4530b97645e84..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git app/src/main/res/drawable/hamburgermenu_120234.png app/src/main/res/drawable/hamburgermenu_120234.png
deleted file mode 100644
index 059a8a7aebbd7b16cbf4ce8430b1dd1265b3c633..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git app/src/main/res/drawable/x.png app/src/main/res/drawable/x.png
deleted file mode 100644
index 052993d14ead3b446dc2092f1750c011cf0bb0f8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git app/src/main/res/drawable-v24/icon_unlike_color.png app/src/main/res/drawable-v24/icon_unlike_color.png
new file mode 100644
index 0000000000000000000000000000000000000000..0faf06e89e53f5cd6f2d032155c59df4042bcda2
GIT binary patch
literal 4600
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
DbYtUD

diff --git app/src/main/res/drawable-v24/hambergermenu.png app/src/main/res/drawable-v24/hambergermenu.png
new file mode 100644
index 0000000000000000000000000000000000000000..a4ce2823c850e7db6d3424f998c090dd5e46a50c
GIT binary patch
literal 398
zc%17D@N?(olHy`uVBq!ia0vp^Mj*_=1|;R|J2nC-#^NA%Cx&(BWL^R}Ea{HEjtmSN
z`?>!lvI6;>1s;*b3=DinK$vl=HlH+5gR-ZKV@QVc+Zl%ITpdK(>diBB4)C?Oc&|=2
zo|bG}5*5X{k(v8~!n<na%NolnkM90I^|Pw*$@sJBZN)`vzUx;o=>Ppw<<i0{nCR?s
zLqO21XR7V_;-1GG#|uk7MSiPw7jey)<)&WVqn;EgmUDZbi^Q~B-M1!lKJHwS*_9~q
zVAnc7yVKipJ045KUVr(dFL25G>NT&su6I8+wmL67@42F<(A+x{-%W=bFQ=TO(-9h)
z7&&eA@x%ufd_VT}Z_+6(I<7G(RdQM8qE}lF8MxfuX0=l}{Pq5ypRfKhd-DBsTgL`P
zrJN29>0?blW)xmXW-D<GOqiFhHBo^h;QCg-cM|V=KLz*Bl9Dsl*(!e6djEuF6XEu`
dv~WLQ?|=4PrFF-tEMOQic)I$ztaD0e0s#8Lpril*

diff --git app/src/main/res/drawable-v24/icon_like_color.png app/src/main/res/drawable-v24/icon_like_color.png
new file mode 100644
index 0000000000000000000000000000000000000000..4d206ca717c7276a77fd2a0a7e11da0bf506095c
GIT binary patch
literal 4419
zc$|$`c|26@-?o+^TSAnW5z?SiqatMN+cbt*Y=bP>CQAm%5*m?g36FJ*8oP{r-yagm
zIwXxHA!B>&JMTQd_x<C2|9j6L=X37+`#slveZSZFT=zLA3J%ld<`m^*Vq)Uf*V95U
zF)_<AuDdzTFwTgnpGYPqeolQY4Kx3Y6<Scd88x$O-DdY|YvXN+8y&r0Z?fK=e#xQ7
zG1KX-ca77*D{;BdvP&@3IuVka1NcQrqV-5aC8CNNy!a(W<j<GLSG~)w8vJ|Oj2&$V
zatfL?)}Fk}=?vJ&xjk&TV6;o~{j<85wb&fge}Af9+=!Rvw^|o;s1~$Zw~!^t^#46t
zF+g8yogVGql@=1`qy92=eJHjJ+~oCR0jplpa!3NOYyVR)9T_|`ceEFM`nU>6;betJ
zWETo0<Y|%yF1VU@=hpU{UKPcD)^fPu;k}k`XYEXm{3!(zT<^bd;X=1miWLZl!ztqF
zBQGxq<{td{5cjdX98q6iAMmtI1~dc$^*h=RyBFE<V`y)*9o+6+#`2vqbH46S^jozW
zFL#U{86BOkc|}3#>qlj%_$ds|2R+g{DNvs<wjI|FN>l}bB-OTaUqQWBs>XUcc-5Ep
zCRo)WckXnb93QGz=^!iCmY0_|y<9DA2@KwW_ko~^fCy@icC-&9lM*&H8GMKnyIDi?
zO|O~%_6;U@=T44Jokd3gS}UUS^mE4jXAXxuEBeBJjZH4<)=g)tTbaarez3H#_}J7$
zJ3Rg(Lwqk~nC#&5^;=MN$BV|M&LcN>g)^fX`~^|RIidr^kdx=K3JS2j$6=hobP;TW
z@5;ORd8f5qvSCWkXo=;p+EajB#mf1FC|526L&Lf51W5!EndB4B0cLA!XgMS-TfYcL
zzbh|S#3$V<u}^7L9OL0nB^lV5nO%MIEhC}5{cn}{Y$zX&X!Frx5dS6TxF$d~7{?`t
z7Nym6wj1D)_nvQDwPT<CO52Gt>%(M6i!~kOoyb0Oc~sAbX?g2wGcaX9ze8zkd@#cW
z0JG74i=XI>rJ4D?zJ~W$@<jV)tb|gfK_Rk(lpl4^^32d^nLwZ&dt%^f>L#|O5Pogz
z3EDTSZ})uR;gjUfV3U+ri8O>JW)53!xZAiJboa@GOuhB>fB=6htq9S2S(l2si0y{&
z;eF|Mdw+FC3p7WvO4pddrMSTQv(G=Glt-5~JQE`2YK~XRA(XVoQ%ZO|zC7^xuVXz7
z`&kn8?(hV5J(-IDP4BxNG+%tKI6+c(HNm-ox=L#hXpW%tG#P0|4$#w0Y!2$N3IVQr
z_OnV7tV(B49cA{Px5BAKXqn|U7^Y2{yXL1@i2Wu`Y0YYhr6@OdUVghGCkM(9#IJ4h
zm7x2`_XFD_RM7Znrn{vrQe4?bPu-vKcx_-WI>ZjQH;Xh+*Y7>$iA$|vUo4ZSY}HLC
zp|Po+t*WkQ%J?2~cc~=0+R=PGbtJcSC<aMa)1WSJdiF(X-|eb#6sz*u#Bml^(1|ix
z{-Bw}kxyUST<oTd4+e+J97_TPN&s@(eTrVcw9IQg?U)Q$f9q1W_UX2fB`=7$hPLF^
zA(@rZ<^$JunF8xJDde!lV@s9E>b`0zin5ueeL2vcDaGhy-J^tNVaWn^L6|fs3antv
z?Wt@+3jJxUwe4vG<;s+NYi3_k1bgen(KA9-MMp~x2mKOdk3HZWP*`AIfo47ESVf0t
z^?7Dy_#+@C9^cpb#1ZO9x<EKokG@PI__GO>KQ-@Q5;4`OVRH}<B^3V{_$hlkLP$T<
z?b(|SVMciVtgzo}q!NsMNvY{wSJAZSs-p(#rwZ9n;ZqL`!~BI0^QXqxR8r9nz5`<|
zum+020E0JZc1XQ+!9WdLQolDpO4SWrB_LfEK0WiEFK9?f6|^l_#|_SwVc`;au~h-;
zh~^^f;P+x$p*kmSFia1pra5nsRuvd_c2FRcP`Q6U|B4+!%h^ZQ!dnDYX$`by6AGBy
z_3V^%T^g6wi)@7&)bSK$RTa%Z>>VF^0aVxlgAs&}8@Kqiyj(<7*z`?0pwQq~f|*(g
zvMgLLZ*j<3Nr>l#jeLsdVc{Y|F~DwTpVyz)D9WD0?;D%;zZN=3yJ9@go6e+1wT8|A
zVm5M4ecc*1%pqUFhw(hg#s?i5Lv8QJh6_s1TqiLfh+ek>gyZt<*sVfbAC6?%USa{a
zmh<0xg$iJ_o%ZUna$GBCzWW(&QqmPDc#lKwUL60UJ`G#un`c7V^B9_P(L^tkemuD-
zICIKx=9CjL$0wR(r_90yLugKHU7mE>ss#jIWQk=kcuXS0Qn)x>fB;7LTkpcdu<moA
z4CUE`nC$s5OmF`ObU?R{F~z6t%r5@l(TvYQgn0?d^quw|xu4NYGXGhIeSr@(528$G
zIPCJoUK#uQHE^22t>B3>K5i8LKO=Ckv&dhe|JDw!_+JbB2eXU2-w8;WegN&g%ou6M
z`E4?~bKcHTnn4X%{I%1Wn<6^nAnb~vSSTlc9Gajp(u(t-U~^A?)W0{r%_1R({covE
z-K?~0(;q4Rs%6_I%a$}=tSoho0A;?${?dxX%|%Hf*i2Wm2_eA}bn;Te4e3{B-(z-@
zG3bt8m3#&HmojlJ<NM1qK?e(zee^<;+_;mrtu`ou>3zG=<_{I?5U%2lymY64^kM%)
z)=?bM7$R5d>ZmCXPS+TkSdsnoDw(ThF=Mj9^z<C>wblLif_Yc&)StyDg<YkEkL(P1
z1B*`<+=!c3`hOf?vAyrWqim?H%7H_n@yW-!!WAc%ol_OuW;IHxza(ACezY=43gNkk
zke><Nfz(Em#dML*i(3d1WOqFFC?%hG^kDiTt<`9~swg#1yxLc#L|N*sTVTyR!cOUh
z({OJ?I&MvKY`+4#a$Uc#CvCQ^Ua2?>eGYdYvRvxJgAiuv>%twaX(vt2jz7xmaWnVs
z>(TL>_)&52BHppQv5(~Fh>@2=i~Aq@&wn_3zUlA6*eH~{QBE+%%lcBI49>Z~=i{(_
z2roQc8S~>J>V_2rs;u^aBp!D<s#Ad7@QcDaQ3==FSPkWP<ZVAw?dOhO&|;SG;1g}v
z=JNTlU56KjcGpfepK98g(^@}-$%$HwTHk-w;5&J*ldEWvw;4pn_kC*=9`(Cy>@yc1
z;r|!Cv*lCb?X^ZA!7+SG*rS|+r~+T|D;H3u0p!0=*Re}&tglNVAoihO12(jV<jWz&
zf0Hery(0*<5we%=;SnJ)Nikyg%V?c1jBQNXB?`v__FBQVJBS$q<k_f1Vt^hNqimJ(
zbeeKYakDHOwgz5^9ns=mKQC-?r(5zG7JJKBE#MGood&E((c8>yF|bgaa6{dKq2%8Y
zl060anX_TcHnoKoSBIp|bM_Y7oR(fdozu6tiEcNr%7WzSI_u~BNQTdb#eKW%ugO5O
z24&KSb#(IGFMF12#^y{Zj6C8zSfR4fmOh@<Spf3J_3yTTK2L~mh85=QS9mWr^>5ds
z#@Y?s*A}w?f>zInD|(pT9;x(jxHT1#@+%?hO%yS~@U9wh)NPm>98hn0-M3?_aR+uR
zVIIS^c>kGg%CdFMTR$-OOek6Luz+_sxG5S^bTPK;%8948hF=G&vMVWCbRgD^K6ljc
z`eSW?`{=3fq&CQVD@8rQZ`J0*XBR}fHtY8B(+{Q1$h)8q9*>E}U#8!-SCdKs#a9DH
zYs(8}I}+P|e3vr;HhOdz>`#-YUW8B@y$bJCsa+*+pS$uMjfID{(v6Q^OIglPMM|E3
z|J^jD4)UOFaxdQ7Zk{ZJYmi2)#;!xgN)zCA3HXVnvte{78|uu++58sL_Ii{(?buC@
zba1Ze`B<NK<FScH_y~8MaS0BgHlyfPJ^Y9b>CJ|UIM}eG-+J^bMeFza13~qo$*FbA
z@tR<AVBjz3T_QIDuY#m)tVyQ{_jfQyHG?Qecl#{uYg@ay|0sv(?08tof3BWffG`Qi
ziOLxJ9T{D}k(%gj-p+ZfVY~0~*gdB613d=Zn3n0dmU*{(yyHc~spN%s35Fi;%51D}
zuy;DjrchI6D+ZqMtTLb%$YygN$Ga|AY`3dbI+k2M*taOv-D#bH4As)}5Rh4}CWSTc
zDWC&y=v+%e8H6XRZXl9{s9I~eQ*0@n=XW}I*fPU)iV}Ugk5=7qyv`<A9@V-rW!uyR
z*PFU6<eU(B`H&jYePUcvPcx7eeE=102_l|LJr-_C&Y(c6`7tNMDg6OOslU@j-}tQ^
z2yV2A6W0yA2ODqD7eBr^!)<J?9L8A(wcRgL^X;f}Jp~l*Rv+gz;&;cIVA%x0aPmxY
zgX3P<Qh@v|JAxIX9{h869INignNObAv(4ZIt#3?L++&JXQ<yb%^Q@Ay!^An{LY~K<
z=3<6fkvH-5JQy>zAR7U<0B+k%NKnzAMpkeIe5il8Lgz}qlvQnywhi5=7x<HlqSanm
zl7##j>Lq(^JIP*2ttVd8U~ggYFN`k14UF_|VlPsSHSlOSO-L)Q*9>Hj4z|$=+E2#5
z4h0s+^RgwkL=;pN94<o%tQ#l}8enU|4X+FLz)VIzp<B8cxXR=**g@48fF?*GRjj88
zmC`8qYnh~4?zf^C6djWjR^dDD=kT?vXe<6EgJJhwmR@yYR7pWiH7Nt0`7or(WM|6n
z^%$Vi{pST2*C6<*5g{82=fj+&3R{|bFel(#_k<zm-iq?*Y+bv_t~l@UbPQ572{UHA
zI0HiGh$3YWBrJ7d!hqTu;QCS(GLVH(%r!|{bxwSvUx852g##lw<W7wuOA6@a{R@F)
zMpIO$1~i4;NbzqEe)TEttc}slEfBzBJ~OuD5FfM`r1`nsb0iF1C>;t<)X3KdYV8)5
zCU#MI^{AD}?|b>pIFuO`1iX)E-)OsUNlHT*8kdrD$KT*t#LE2Z?)*HGl)YABR3~T0
zF2E=v|83J4Ytgf3yfcfcHx{D|scgAD46p3j^YC~FtPskxip>twXGr@su7q41?2SU_
zD+gaW>E!)AovgAw@=p(Cf2_OK<D}tV&-)j1n1T6^!k2<8bK~AS|EP^O?3}q@wWNJ4
zOudJkZQd6U3Fx#TTd``en=%yn$EoK_52d?M;LoUWdC2SvRt64X$rlBf#c-r?GCn96
zDb53K0K&Fl!wFoVtPuQit!1zB1nl}70jaJRwO17k<5ZHM9Px{p)`pl`iFt$=O*Srx
zH^Q<D)1k9s>Pz@7L_23SBO@W8I2r4cagyC2@aHz~l5k-xv5+;N&XMNosT#&v4WzKF
zhG$MVOdSX^IN%Lq>Z^2Uj}sXjF7ac6du&H%KgIQbQBgnEy??ORvN*?ZL-I~nNb=xV
zpy5<w#yJi4bbbu8Pry`ffb!n$vy%e^ut&yq;}Twdm*bD`2~x$jDlEO?3pq_R)1l0V
z;^Pu$#SgMp*$U5$6xDq~x_+|xu%=-YksStRbow%~qQTI|H?2^_rq-6c5ZhSr8Lhs3
zz;&=YRPW^Cic8!8q>$w#?ATK<>vnMt14{3CN%2{O8pfpJ2*W>e9vP@?*x`9jg5wso
z#(-gW^s=eMTaf&)=2G|DrA@;VIV<w>V~-B-bz&|{Zzdnr!kQNHcAJj!w77&AzGu4n
z97S)bpX{Nq97MNnjEVBs6_Ux0t~ph(7t>_y0{Ck2w4&Q1z-&=FGd1OzWIJb&Q->@t
zX4Od|fBM19`<tah+`x9uNDyTMjJ!zT0RP|L3h@xoM##nvCF)7EH{{<5eQlW5C#Y@M
Fe*tDKdtv|p

diff --git app/src/main/res/drawable-v24/icon_like_gray.png app/src/main/res/drawable-v24/icon_like_gray.png
new file mode 100644
index 0000000000000000000000000000000000000000..c5fed531b67d59c5f4dc643aed935f5a83ce1ca0
GIT binary patch
literal 4252
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

diff --git app/src/main/res/drawable-v24/icon_unlike_gray.png app/src/main/res/drawable-v24/icon_unlike_gray.png
new file mode 100644
index 0000000000000000000000000000000000000000..664d0060ae0868720b793f6606b75dea52706939
GIT binary patch
literal 4576
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
SniTtg69&4bIu&;vBmW1|RL<rA

diff --git app/src/main/res/drawable-v24/mark.png app/src/main/res/drawable-v24/mark.png
index 6b65989b9945e3ef252fa28e41e486e2c440c1a6..aead3e079c78757411f301bf24198966bafd594e
GIT binary patch
literal 843
zc$@)C1GM~!P)<h;3K|Lk000e1NJLTq000>P000>X1^@s6#OZ}&0009LNkl<ZNQu2w
zOHUI~6#nka^fBcbC=Ij)L2J~755TB#0TE3QSN;pP?A*Bb7r1eyf5Jzi7$pHD5JE^$
zl178JNNUS#fI{bS%(;aoola@d#4l-X=iKj{@18T~+!1hrh}<UR-@l^##9Nrj6*#*F
zl*T6b5*MJ4j6%QrpdyA4<))e<>7mQSB%$ko=Hm!V0xT1h&x6^qPfKNSP9>7+KSOFX
z4xuPegplN84Q4q+Ajg5dmO^}CwG^vv5h)PsmJX^A$n5Q7`>+7hao|%Fv;_Q!G=yNY
z5E1P3&yrAGBERn6A}9hv)uiofb_14Wf%bMmmIa|{5DkscGz}NSZACxZ;?&UfW=6P0
z6t@V&F}9_ErYKm+ZNe@T;L}uGd-eiDALr%jQ&nl_edaNr{k)*LZJSS@kkCUi#f|&{
zOw)u)gyHGs((!^_aSYEa<HJCLc%OM(KK5gOcZDi4v63sY9Q>k<!-DLfbK{RaPsn!O
zXP#^fO_Tm^RERkF{bCETAUPn%hTh%lDZ+N%XP$%*MgLkNYI_IZII=|pstV!rBR4tW
zDZ+N%XP)dy$0_>P67gRd0GX!jvNk;k1cF$7`5eabQrVR9GuwHedCX@&_IJaxg;Rrl
zq($S<guss-L%vu$n?dB>7+S9mVry|8nRl<Dh9gp-r@09h5iB0c`R^4iT+v;!)^|ox
zSe%0u)X~$@EQc!_jvzNXjqKE9u`$9Cw1;$bvjCU(ATRGSFI1oS8wpY)ou!HAN#8m+
zEKPiCFd)~`#AntKpG|sByyq}7njejWb`ANT196LnLqT*kHprEq?V|%RkNMSb;sv=j
z(oZ6&L#S%i0A$;;RMClr(_fIsNZ-ChYJ0e<h@HzKHudGitG;Tvj-mDT$=3AD!ZhW6
zE!6d8OkF=qT4%I$6C4p?t*;?I_pRoav1TTW(AYyb2l+A^KeN3a)RhS%eKSEyN3o@u
z<NRJn>~pfh|F1J)a6mG4iU%=vstS0aZV`DxzaL~4<oZvL7u^ZJ)$?ssi}U{h;1A7H
VtgIJwbRYl#002ovPDHLkV1jt^k^BGv

